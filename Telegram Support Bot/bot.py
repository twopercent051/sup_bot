import sys
import logging
import telebot
import time
from telebot import apihelper

import config
import core_mssql
import markup

logger = logging.getLogger(__name__)

logging.basicConfig(
    level=logging.INFO,
    format=u'%(filename)s:%(lineno)d #%(levelname)-8s [%(asctime)s] - %(name)s - %(message)s',
)
logger.info("Starting bot")

if config.PROXY_URL:
    apihelper.proxy = {'https': config.PROXY_URL}

bot = telebot.TeleBot(config.TOKEN, skip_pending=True)


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id

    if core_mssql.check_agent_status(user_id):
        bot.send_message(message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏', parse_mode='html',
                         reply_markup=markup.markup_agent())
    else:
        bot.send_message(message.chat.id,
                         'üëãüèª –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–æ–π-–ª–∏–±–æ '
                         '–≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ - –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å</b> –∏ –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ —Å–∫–æ—Ä–æ–º '
                         '–≤—Ä–µ–º–µ–Ω–∏ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç—è—Ç!',
                         parse_mode='html', reply_markup=markup.markup_main())


@bot.message_handler(commands=['agent'])
def agent(message):
    user_id = message.from_user.id

    if core_mssql.check_agent_status(user_id):
        bot.send_message(message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏', parse_mode='html',
                         reply_markup=markup.markup_agent())

    else:
        take_password_message = bot.send_message(message.chat.id,
                                                 '‚ö†Ô∏è –¢–µ–±—è –Ω–µ—Ç –≤ –±–∞–∑–µ. –û—Ç–ø—Ä–∞–≤—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞.',
                                                 reply_markup=markup.markup_cancel())

        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(take_password_message, get_password_message)


@bot.message_handler(commands=['admin'])
def admin(message):
    user_id = message.from_user.id

    if str(user_id) == config.ADMIN_ID:
        bot.send_message(message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–¥–º–∏–Ω', reply_markup=markup.markup_admin())
    else:
        bot.send_message(message.chat.id, 'üö´ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.')


@bot.message_handler(regexp='‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å')
def get_source(message):
    message.from_user.id
    text = '–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫—É'
    bot.send_message(message.chat.id, text, reply_markup=markup.markup_sources())


@bot.message_handler(content_types=['text'])
def send_text(message):
    user_id = message.from_user.id

    if message.text == '‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å':
        take_new_request = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è.',
                                            reply_markup=markup.markup_cancel())

        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(take_new_request, get_new_request)

    elif message.text == '‚úâÔ∏è –ú–æ–∏ –∑–∞–ø—Ä–æ—Å—ã':
        markup_and_value = markup.markup_reqs(user_id, 'my_reqs', '1')
        markup_req = markup_and_value[0]
        value = markup_and_value[1]

        if value == 0:
            bot.send_message(message.chat.id, '–£ –≤–∞—Å –ø–æ–∫–∞ –µ—â—ë –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤.', reply_markup=markup.markup_main())
        else:
            bot.send_message(message.chat.id, '–í–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã:', reply_markup=markup_req)

    else:
        bot.send_message(message.chat.id, '–í—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', parse_mode='html',
                         reply_markup=markup.markup_main())


def get_password_message(message):
    password = message.text
    user_id = message.from_user.id

    if password is None:
        send_message = bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –Ω–µ —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                                        reply_markup=markup.markup_cancel())

        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(send_message, get_password_message)

    elif password.lower() == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, '–û—Ç–º–µ–Ω–µ–Ω–æ.', reply_markup=markup.markup_main())
        return

    elif core_mssql.valid_password(password):
        core_mssql.delete_password(password)
        core_mssql.add_agent(user_id)

        bot.send_message(message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏', parse_mode='html',
                         reply_markup=markup.markup_main())
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏:', parse_mode='html',
                         reply_markup=markup.markup_agent())

    else:
        send_message = bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.',
                                        reply_markup=markup.markup_cancel())

        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(send_message, get_password_message)


def get_agent_id_message(message):
    agent_id = message.text

    if agent_id is None:
        take_agent_id_message = bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –Ω–µ —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                                                 reply_markup=markup.markup_cancel())

        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(take_agent_id_message, get_agent_id_message)

    elif agent_id.lower() == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, '–û—Ç–º–µ–Ω–µ–Ω–æ.', reply_markup=markup.markup_main())
        return

    else:
        core_mssql.add_agent(agent_id)
        bot.send_message(message.chat.id, '‚úÖ –ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.', reply_markup=markup.markup_main())
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏:', reply_markup=markup.markup_admin())


def get_new_request(message, source):
    request = message.text
    user_id = message.from_user.id
    username = f'@{message.from_user.username}'
    check_file = core_mssql.get_file(message)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª
    if check_file is not None:
        file_id = check_file['file_id']
        file_name = check_file['file_name']
        file_type = check_file['type']
        request = check_file['text']

        if str(request) == 'None':
            take_new_request = bot.send_message(message.chat.id,
                                                '‚ö†Ô∏è –í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–µ '
                                                '—Å —Ñ–∞–π–ª–æ–º.',
                                                reply_markup=markup.markup_cancel())

            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(take_new_request, get_new_request, source)

        else:
            req_id = core_mssql.new_req(user_id, request, source, username)
            core_mssql.add_file(req_id, file_id, file_name, file_type)

            bot.send_message(message.chat.id,
                             f'‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ–¥ ID {req_id} —Å–æ–∑–¥–∞–Ω. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '
                             f'<b>–ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã</b>',
                             parse_mode='html', reply_markup=markup.markup_main())

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
    else:
        if request is None:
            take_new_request = bot.send_message(message.chat.id,
                                                '‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –≤–∞–º–∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –±–æ—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ '
                                                '–µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ '
                                                '–¥–∞–Ω–Ω—ã—Ö (—Ç–µ–∫—Å—Ç, —Ñ–∞–π–ª—ã, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)',
                                                reply_markup=markup.markup_cancel())

            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(take_new_request, get_new_request, source)

        elif request.lower() == '–æ—Ç–º–µ–Ω–∞':
            bot.send_message(message.chat.id, '–û—Ç–º–µ–Ω–µ–Ω–æ.', reply_markup=markup.markup_main())
            return

        else:
            req_id = core_mssql.new_req(user_id, request, source, username)
            bot.send_message(message.chat.id,
                             f'‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ–¥ ID {req_id} —Å–æ–∑–¥–∞–Ω. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '
                             f'<b>–ú–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã</b>',
                             parse_mode='html', reply_markup=markup.markup_main())


def get_additional_message(message, req_id, status):
    additional_message = message.text
    check_file = core_mssql.get_file(message)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª
    if check_file is not None:
        file_id = check_file['file_id']
        file_name = check_file['file_name']
        file_type = check_file['type']
        additional_message = check_file['text']

        core_mssql.add_file(req_id, file_id, file_name, file_type)

    if additional_message is None:
        take_additional_message = bot.send_message(chat_id=message.chat.id,
                                                   text='‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –≤–∞–º–∏ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –±–æ—Ç–µ. '
                                                        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ '
                                                        '–æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö (—Ç–µ–∫—Å—Ç, —Ñ–∞–π–ª—ã, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, '
                                                        '–∞—É–¥–∏–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è).',
                                                   reply_markup=markup.markup_cancel())

        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(take_additional_message, get_additional_message, req_id, status)

    elif additional_message.lower() == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, '–û—Ç–º–µ–Ω–µ–Ω–æ.', reply_markup=markup.markup_main())
        return

    else:
        if additional_message != 'None':
            source = ''
            core_mssql.add_message(req_id, additional_message, status, source)

        if check_file is not None:
            if additional_message != 'None':
                text = '‚úÖ –í–∞—à —Ñ–∞–π–ª –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!'
            else:
                text = '‚úÖ –í–∞—à —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!'
        else:
            text = '‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!'

        bot.send_message(message.chat.id, text, reply_markup=markup.markup_main())

        if status == 'agent':
            user_id = core_mssql.get_user_id_of_req(req_id)
            try:
                if additional_message == 'None':
                    additional_message = ''

                bot.send_message(user_id,
                                 f'‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å ID {req_id}!\n\nüßë‚Äçüíª –û—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n{additional_message}',
                                 reply_markup=markup.markup_main())

                if type == 'photo':
                    bot.send_photo(user_id, photo=file_id, reply_markup=markup.markup_main())
                elif type == 'document':
                    bot.send_document(user_id, data=file_id, reply_markup=markup.markup_main())
                elif type == 'video':
                    bot.send_video(user_id, data=file_id, reply_markup=markup.markup_main())
                elif type == 'audio':
                    bot.send_audio(user_id, audio=file_id, reply_markup=markup.markup_main())
                elif type == 'voice':
                    bot.send_voice(user_id, voice=file_id, reply_markup=markup.markup_main())
                else:
                    bot.send_message(user_id, additional_message, reply_markup=markup.markup_main())
            except:
                pass

def push(req_id):
    text = f'‚ö†Ô∏è –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∑–∞–∫—Ä—ã–ª –í–∞—à –∑–∞–ø—Ä–æ—Å ID {req_id}'
    user_id = core_mssql.get_user_id_of_req(req_id)
    bot.send_message(user_id, text)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    user_id = call.message.chat.id

    sources = [
        'source_1',
        'source_2',
        'source_3',
        'source_4',
        'source_5',
        'source_6',
    ]

    if call.message:
        if call.data in sources:

            take_new_request = bot.send_message(call.message.chat.id,
                                                '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è.',
                                                reply_markup=markup.markup_cancel())

            bot.clear_step_handler_by_chat_id(call.message.chat.id)
            bot.register_next_step_handler(take_new_request, get_new_request, call.data)

        if ('my_reqs:' in call.data) or ('waiting_reqs:' in call.data) or ('answered_reqs:' in call.data) or (
                'confirm_reqs:' in call.data):
            """
            –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è:

            ‚úâÔ∏è –ú–æ–∏ –∑–∞–ø—Ä–æ—Å—ã
            ‚ùóÔ∏è –û–∂–∏–¥–∞—é—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏,
            ‚è≥ –û–∂–∏–¥–∞—é—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã  
            """

            parts = call.data.split(':')
            callback = parts[0]
            number = parts[1]
            markup_and_value = markup.markup_reqs(user_id, callback, number)
            markup_req = markup_and_value[0]
            value = markup_and_value[1]

            if value == 0:
                bot.send_message(chat_id=call.message.chat.id, text='‚ö†Ô∏è –ó–∞–ø—Ä–æ—Å—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.',
                                 reply_markup=markup.markup_main())
                bot.answer_callback_query(call.id)
                return

            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–ø–∏—Å–∫–∏, –ª–∏–±–æ –¥–æ–±–∞–≤–∏—Ç—å '
                                           '—Å–æ–æ–±—â–µ–Ω–∏–µ:',
                                      reply_markup=markup_req)
            except:
                bot.send_message(chat_id=call.message.chat.id, text='–í–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã:', reply_markup=markup_req)

            bot.answer_callback_query(call.id)

        # –û—Ç–∫—Ä—ã—Ç—å –∑–∞–ø—Ä–æ—Å
        elif 'open_req:' in call.data:
            parts = call.data.split(':')
            req_id = parts[1]
            callback = parts[2]

            req_status = core_mssql.get_req_status(req_id)
            request_data = core_mssql.get_request_data(req_id, callback)
            len_req_data = len(request_data)

            i = 1
            for data in request_data:
                if i == len_req_data:
                    markup_req = markup.markup_request_action(req_id, req_status, callback)
                else:
                    markup_req = None

                bot.send_message(chat_id=call.message.chat.id, text=data, parse_mode='html', reply_markup=markup_req)

                i += 1

            bot.answer_callback_query(call.id)

        # –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–ø—Ä–æ—Å
        elif 'add_message:' in call.data:
            parts = call.data.split(':')
            req_id = parts[1]
            status_user = parts[2]

            take_additional_message = bot.send_message(chat_id=call.message.chat.id,
                                                       text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö '
                                                            '—Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö (—Ç–µ–∫—Å—Ç, —Ñ–∞–π–ª—ã, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, '
                                                            '–≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)',
                                                       reply_markup=markup.markup_cancel())

            bot.register_next_step_handler(take_additional_message, get_additional_message, req_id, status_user)

            bot.answer_callback_query(call.id)

        # –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø—Ä–æ—Å
        elif 'confirm_req:' in call.data:
            parts = call.data.split(':')
            confirm_status = parts[1]
            req_id = parts[2]

            if core_mssql.get_req_status(req_id) == 'confirm':
                bot.send_message(chat_id=call.message.chat.id, text="‚ö†Ô∏è –≠—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω.",
                                 reply_markup=markup.markup_main())
                bot.answer_callback_query(call.id)

                return

            # –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            if confirm_status == 'wait':
                user_id = call.message.chat.id
                is_agent = core_mssql.check_agent_status(user_id)
                bot.send_message(chat_id=call.message.chat.id,
                                 text="–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</b>", parse_mode='html',
                                 reply_markup=markup.markup_confirm_req(req_id, is_agent))

            # –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
            elif confirm_status == 'true':
                core_mssql.confirm_req(req_id)
                is_agent = parts[3]
                try:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text="‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω.", reply_markup=markup.markup_main())
                except:
                    bot.send_message(chat_id=call.message.chat.id, text="‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω.",
                                     reply_markup=markup.markup_main())
                if is_agent == 'True':
                    push(req_id)
                bot.answer_callback_query(call.id)

        # –§–∞–π–ª—ã –∑–∞–ø—Ä–æ—Å–∞
        elif 'req_files:' in call.data:
            parts = call.data.split(':')
            req_id = parts[1]
            callback = parts[2]
            number = parts[3]

            markup_and_value = markup.markup_files(number, req_id, callback)
            markup_files = markup_and_value[0]
            value = markup_and_value[1]

            if value == 0:
                bot.send_message(chat_id=call.message.chat.id, text='‚ö†Ô∏è –§–∞–π–ª—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.',
                                 reply_markup=markup.markup_main())
                bot.answer_callback_query(call.id)
                return

            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ.', reply_markup=markup_files)
            except:
                bot.send_message(chat_id=call.message.chat.id, text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ.',
                                 reply_markup=markup_files)

            bot.answer_callback_query(call.id)

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª
        elif 'send_file:' in call.data:
            parts = call.data.split(':')
            id = parts[1]
            file_type = parts[2]

            file_id = core_mssql.get_file_id(id)

            if file_type == 'photo':
                bot.send_photo(call.message.chat.id, photo=file_id, reply_markup=markup.markup_main())
            elif file_type == 'document':
                bot.send_document(call.message.chat.id, document=file_id, reply_markup=markup.markup_main())
            elif file_type == 'video':
                bot.send_video(call.message.chat.id, data=file_id, reply_markup=markup.markup_main())
            elif file_type == 'audio':
                bot.send_audio(call.message.chat.id, audio=file_id, reply_markup=markup.markup_main())
            elif file_type == 'voice':
                bot.send_voice(call.message.chat.id, voice=file_id, reply_markup=markup.markup_main())

            bot.answer_callback_query(call.id)

        # –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –ø–∞–Ω–µ–ª—å –∞–≥–µ–Ω—Ç–∞
        elif call.data == 'back_agent':
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏', parse_mode='html',
                                      reply_markup=markup.markup_agent())
            except:
                bot.send_message(call.message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏', parse_mode='html',
                                 reply_markup=markup.markup_agent())

            bot.answer_callback_query(call.id)

        # –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞
        elif call.data == 'back_admin':
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–¥–º–∏–Ω', parse_mode='html',
                                      reply_markup=markup.markup_admin())
            except:
                bot.send_message(call.message.chat.id, 'üîë –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –ê–¥–º–∏–Ω', parse_mode='html',
                                 reply_markup=markup.markup_admin())

            bot.answer_callback_query(call.id)

        # –î–æ–±–∞–≤–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
        elif call.data == 'add_agent':
            take_agent_id_message = bot.send_message(chat_id=call.message.chat.id,
                                                     text='–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∞–≥–µ–Ω—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ - –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ ID Telegram.',
                                                     reply_markup=markup.markup_cancel())
            bot.register_next_step_handler(take_agent_id_message, get_agent_id_message)

        # –í—Å–µ –∞–≥–µ–Ω—Ç—ã
        elif 'all_agents:' in call.data:
            number = call.data.split(':')[1]
            markup_and_value = markup.markup_agents(number)
            markup_agents = markup_and_value[0]
            len_agents = markup_and_value[1]

            if len_agents == 0:
                bot.send_message(chat_id=call.message.chat.id, text='‚ö†Ô∏è –ê–≥–µ–Ω—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.',
                                 reply_markup=markup.markup_main())
                bot.answer_callback_query(call.id)
                return

            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                                      reply_markup=markup_agents)
            except:
                bot.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ',
                                 parse_mode='html', reply_markup=markup_agents)

            bot.answer_callback_query(call.id)

        # –£–¥–∞–ª–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
        elif 'delete_agent:' in call.data:
            agent_id = call.data.split(':')[1]
            core_mssql.delete_agent(agent_id)

            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                                      reply_markup=markup.markup_agents('1')[0])
            except:
                bot.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ',
                                 parse_mode='html', reply_markup=markup.markup_agents('1')[0])

            bot.answer_callback_query(call.id)

        # –í—Å–µ –ø–∞—Ä–æ–ª–∏
        elif 'all_passwords:' in call.data:
            number = call.data.split(':')[1]
            markup_and_value = markup.markup_passwords(number)
            markup_passwords = markup_and_value[0]
            len_passwords = markup_and_value[1]

            if len_passwords == 0:
                bot.send_message(chat_id=call.message.chat.id, text='‚ö†Ô∏è –ü–∞—Ä–æ–ª–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.',
                                 reply_markup=markup.markup_main())
                bot.answer_callback_query(call.id)
                return

            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                                      reply_markup=markup_passwords)
            except:
                bot.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                                 reply_markup=markup_passwords)

            bot.answer_callback_query(call.id)

        # –£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å
        elif 'delete_password:' in call.data:
            password = call.data.split(':')[1]
            core_mssql.delete_password(password)

            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                                      reply_markup=markup.markup_passwords('1')[0])
            except:
                bot.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                                 reply_markup=markup.markup_passwords('1')[0])

            bot.answer_callback_query(call.id)

        # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª–∏
        elif call.data == 'generate_passwords':
            # 10 - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–æ–ª–µ–π, 16 - –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
            passwords = core_mssql.generate_passwords(10, 16)
            core_mssql.add_passwords(passwords)

            text_passwords = ''
            i = 1
            for password in passwords:
                text_passwords += f'{i}. {password}\n'
                i += 1

            bot.send_message(call.message.chat.id, f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {i - 1} –ø–∞—Ä–æ–ª–µ–π:\n\n{text_passwords}",
                             parse_mode='html', reply_markup=markup.markup_main())
            bot.send_message(call.message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ', parse_mode='html',
                             reply_markup=markup.markup_passwords('1')[0])

            bot.answer_callback_query(call.id)

        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
        elif 'stop_bot:' in call.data:
            status = call.data.split(':')[1]

            # –ó–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
            if status == 'wait':
                try:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text=f"–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞?", parse_mode='html',
                                          reply_markup=markup.markup_confirm_stop())
                except:
                    bot.send_message(call.message.chat.id, f"–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞?", parse_mode='html',
                                     reply_markup=markup.markup_confirm_stop())

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ
            elif status == 'confirm':
                try:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                          text='‚úÖ –ë–æ—Ç –æ–∫–ª—é—á–µ–Ω.')
                except:
                    bot.send_message(chat_id=call.message.chat.id, text='‚úÖ –ë–æ—Ç –æ–∫–ª—é—á–µ–Ω.')

                bot.answer_callback_query(call.id)
                bot.stop_polling()
                sys.exit()


if __name__ == "__main__":

    bot.polling(none_stop=True)
    # while True:
    #     try:
    #         logging.info("Bot running..")
    #         bot.polling(none_stop=True, interval=2)
    #     except Exception as e:
    #         logging.error(e)
    #         time.sleep(15)
    #         logging.info("Running again!")
